from abc import ABC, abstractmethodfrom typing import Listfrom nuclear_crisis_simulation.models import ScenarioParameters, AgentDecisionclass CouncilAgent(ABC):    def __init__(self, role: str, priorities: List[str], expertise: List[str]):        self.role = role        self.priorities = priorities        self.expertise = expertise        self.position_history = []    @abstractmethod    def generate_initial_assessment(self, scenario: ScenarioParameters) -> AgentDecision:        pass    @abstractmethod    def participate_discussion(self, other_positions: List[AgentDecision],                               discussion_history: List[str]) -> str:        pass    @abstractmethod    def final_recommendation(self, discussion_summary: str,                             scenario: ScenarioParameters) -> AgentDecision:        pass